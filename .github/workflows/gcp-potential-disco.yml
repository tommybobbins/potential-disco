name: gcp-potential-disco

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
  pull_request:
    # paths: # setup paths if necessary
    branches:
      - main
    types:
      - opened # default
      - synchronize # default
      - reopened # default
      - closed

env:
  WORKING_DIR:  ${{ vars.WORKING_DIR }}

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: "PRD"
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v0.7.0
      with:
        create_credentials_file: 'true'
        workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ vars.GCP_SERVICE_ACCOUNT }}

    - uses: opentofu/setup-opentofu@v1

    - name: OpenTofu Init
      id: init
      run: tofu init
      env: 
         TF_VAR_project: ${{ vars.TFVAR_GCP_PROJECT }}

    - name: OpenTofu Validate
      id: validate
      run: tofu validate -no-color

    - name: OpenTofu Plan
      id: plan
      run: tofu plan -no-color
      continue-on-error: true
      env: 
         TF_VAR_project: ${{ vars.TFVAR_GCP_PROJECT }}

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "tofu\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.REPO_PAT_TOKEN }}
        script: |
          const output = `#### OpenTofu Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>
     
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`
      
          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.WORKING_DIR }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - uses: 'google-github-actions/get-gke-credentials@v2'
      if: always()
      continue-on-error: true
      with:
        cluster_name: "${{ vars.TFVAR_GCP_PROJECT }}-gke"
        location: ${{ vars.REGION }}
        project_id: ${{ vars.TFVAR_GCP_PROJECT }}

    - name: OpenTofu Apply
      id: apply
      #if: github.event.pull_request.merged == true
      run: tofu apply -auto-approve -input=false
      env: 
         TF_VAR_project: ${{ vars.TFVAR_GCP_PROJECT }}

    - uses: actions/github-script@v6
      if: github.event.pull_request.merged == true
      with:
        script: |
          const output = `#### OpenTofu Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### OpenTofu Apply üìñ\`${{ steps.apply.outcome }}\`
          <details><summary>Show Apply</summary>
          \`\`\`\n
          ${{ steps.apply.outputs.stdout }}
          \`\`\`
          </details>
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.WORKING_DIR }}\`, Workflow: \`${{ github.workflow }}\`*`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
